import { Infer } from 'superstruct';
export declare const ValidatorMetaData: import("superstruct").Struct<{
    description: any[] | null;
    name: number[];
    sui_address: string;
    pubkey_bytes: number[];
    network_pubkey_bytes: number[];
    worker_pubkey_bytes: number[];
    proof_of_possession_bytes: number[];
    image_url: any[] | null;
    project_url: any[] | null;
    net_address: number[];
    consensus_address: number[];
    worker_address: number[];
    next_epoch_stake: number;
    next_epoch_delegation: number;
    next_epoch_gas_price: number;
    next_epoch_commission_rate: number;
}, {
    sui_address: import("superstruct").Struct<string, null>;
    pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
    image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
    project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
    net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    next_epoch_stake: import("superstruct").Struct<number, null>;
    next_epoch_delegation: import("superstruct").Struct<number, null>;
    next_epoch_gas_price: import("superstruct").Struct<number, null>;
    next_epoch_commission_rate: import("superstruct").Struct<number, null>;
}>;
export type DelegatedStake = Infer<typeof DelegatedStake>;
export type ValidatorMetaData = Infer<typeof ValidatorMetaData>;
export type CommitteeInfo = Infer<typeof CommitteeInfo>;
export declare const Balance: import("superstruct").Struct<{
    value: number;
}, {
    value: import("superstruct").Struct<number, null>;
}>;
export declare const StakedSui: import("superstruct").Struct<{
    id: {
        id: string;
    };
    validator_address: string;
    pool_starting_epoch: number;
    delegation_request_epoch: number;
    principal: {
        value: number;
    };
    sui_token_lock: number | null;
}, {
    id: import("superstruct").Struct<{
        id: string;
    }, {
        id: import("superstruct").Struct<string, null>;
    }>;
    validator_address: import("superstruct").Struct<string, null>;
    pool_starting_epoch: import("superstruct").Struct<number, null>;
    delegation_request_epoch: import("superstruct").Struct<number, null>;
    principal: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
    sui_token_lock: import("superstruct").Struct<number | null, null>;
}>;
export declare const ActiveFields: import("superstruct").Struct<{
    id: {
        id: string;
    };
    staked_sui_id: string;
    principal_sui_amount: number;
    pool_tokens: {
        value: number;
    };
}, {
    id: import("superstruct").Struct<{
        id: string;
    }, {
        id: import("superstruct").Struct<string, null>;
    }>;
    staked_sui_id: import("superstruct").Struct<string, null>;
    principal_sui_amount: import("superstruct").Struct<number, null>;
    pool_tokens: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
}>;
export declare const ActiveDelegationStatus: import("superstruct").Struct<{
    Active: {
        id: {
            id: string;
        };
        staked_sui_id: string;
        principal_sui_amount: number;
        pool_tokens: {
            value: number;
        };
    };
}, {
    Active: import("superstruct").Struct<{
        id: {
            id: string;
        };
        staked_sui_id: string;
        principal_sui_amount: number;
        pool_tokens: {
            value: number;
        };
    }, {
        id: import("superstruct").Struct<{
            id: string;
        }, {
            id: import("superstruct").Struct<string, null>;
        }>;
        staked_sui_id: import("superstruct").Struct<string, null>;
        principal_sui_amount: import("superstruct").Struct<number, null>;
        pool_tokens: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
    }>;
}>;
export declare const DelegatedStake: import("superstruct").Struct<{
    staked_sui: {
        id: {
            id: string;
        };
        validator_address: string;
        pool_starting_epoch: number;
        delegation_request_epoch: number;
        principal: {
            value: number;
        };
        sui_token_lock: number | null;
    };
    delegation_status: "Pending" | {
        Active: {
            id: {
                id: string;
            };
            staked_sui_id: string;
            principal_sui_amount: number;
            pool_tokens: {
                value: number;
            };
        };
    };
}, {
    staked_sui: import("superstruct").Struct<{
        id: {
            id: string;
        };
        validator_address: string;
        pool_starting_epoch: number;
        delegation_request_epoch: number;
        principal: {
            value: number;
        };
        sui_token_lock: number | null;
    }, {
        id: import("superstruct").Struct<{
            id: string;
        }, {
            id: import("superstruct").Struct<string, null>;
        }>;
        validator_address: import("superstruct").Struct<string, null>;
        pool_starting_epoch: import("superstruct").Struct<number, null>;
        delegation_request_epoch: import("superstruct").Struct<number, null>;
        principal: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        sui_token_lock: import("superstruct").Struct<number | null, null>;
    }>;
    delegation_status: import("superstruct").Struct<"Pending" | {
        Active: {
            id: {
                id: string;
            };
            staked_sui_id: string;
            principal_sui_amount: number;
            pool_tokens: {
                value: number;
            };
        };
    }, null>;
}>;
export declare const ParametersFields: import("superstruct").Struct<{
    max_validator_candidate_count: string;
    min_validator_stake: string;
    storage_gas_price?: string | undefined;
}, {
    max_validator_candidate_count: import("superstruct").Struct<string, null>;
    min_validator_stake: import("superstruct").Struct<string, null>;
    storage_gas_price: import("superstruct").Struct<string | undefined, null>;
}>;
export declare const Parameters: import("superstruct").Struct<{
    type: string;
    fields: {
        max_validator_candidate_count: string;
        min_validator_stake: string;
        storage_gas_price?: string | undefined;
    };
}, {
    type: import("superstruct").Struct<string, null>;
    fields: import("superstruct").Struct<{
        max_validator_candidate_count: string;
        min_validator_stake: string;
        storage_gas_price?: string | undefined;
    }, {
        max_validator_candidate_count: import("superstruct").Struct<string, null>;
        min_validator_stake: import("superstruct").Struct<string, null>;
        storage_gas_price: import("superstruct").Struct<string | undefined, null>;
    }>;
}>;
export declare const StakeSubsidyFields: import("superstruct").Struct<{
    balance: {
        value: number;
    };
    current_epoch_amount: number;
    epoch_counter: number;
}, {
    balance: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
    current_epoch_amount: import("superstruct").Struct<number, null>;
    epoch_counter: import("superstruct").Struct<number, null>;
}>;
export declare const StakeSubsidy: import("superstruct").Struct<{
    type: string;
    fields: {
        balance: {
            value: number;
        };
        current_epoch_amount: number;
        epoch_counter: number;
    };
}, {
    type: import("superstruct").Struct<string, null>;
    fields: import("superstruct").Struct<{
        balance: {
            value: number;
        };
        current_epoch_amount: number;
        epoch_counter: number;
    }, {
        balance: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        current_epoch_amount: import("superstruct").Struct<number, null>;
        epoch_counter: import("superstruct").Struct<number, null>;
    }>;
}>;
export declare const SuiSupplyFields: import("superstruct").Struct<{
    value: number;
}, {
    value: import("superstruct").Struct<number, null>;
}>;
export declare const ContentsFields: import("superstruct").Struct<{
    id: string;
    size: number;
    head: {
        vec: unknown[];
    };
    tail: {
        vec: unknown[];
    };
}, {
    id: import("superstruct").Struct<string, null>;
    size: import("superstruct").Struct<number, null>;
    head: import("superstruct").Struct<{
        vec: unknown[];
    }, {
        vec: import("superstruct").Struct<unknown[], undefined>;
    }>;
    tail: import("superstruct").Struct<{
        vec: unknown[];
    }, {
        vec: import("superstruct").Struct<unknown[], undefined>;
    }>;
}>;
export declare const ContentsFieldsWithdraw: import("superstruct").Struct<{
    id: string;
    size: number;
}, {
    id: import("superstruct").Struct<string, null>;
    size: import("superstruct").Struct<number, null>;
}>;
export declare const Contents: import("superstruct").Struct<{
    type: string;
    fields: {
        id: string;
        size: number;
        head: {
            vec: unknown[];
        };
        tail: {
            vec: unknown[];
        };
    };
}, {
    type: import("superstruct").Struct<string, null>;
    fields: import("superstruct").Struct<{
        id: string;
        size: number;
        head: {
            vec: unknown[];
        };
        tail: {
            vec: unknown[];
        };
    }, {
        id: import("superstruct").Struct<string, null>;
        size: import("superstruct").Struct<number, null>;
        head: import("superstruct").Struct<{
            vec: unknown[];
        }, {
            vec: import("superstruct").Struct<unknown[], undefined>;
        }>;
        tail: import("superstruct").Struct<{
            vec: unknown[];
        }, {
            vec: import("superstruct").Struct<unknown[], undefined>;
        }>;
    }>;
}>;
export declare const PendingWithdawFields: import("superstruct").Struct<{
    contents: {
        id: string;
        size: number;
    };
}, {
    contents: import("superstruct").Struct<{
        id: string;
        size: number;
    }, {
        id: import("superstruct").Struct<string, null>;
        size: import("superstruct").Struct<number, null>;
    }>;
}>;
export declare const DelegationStakingPoolFields: import("superstruct").Struct<{
    validator_address: string;
    delegation_token_supply: {
        value: number;
    };
    pending_delegations: {
        id: string;
        size: number;
        head: {
            vec: unknown[];
        };
        tail: {
            vec: unknown[];
        };
    };
    pending_withdraws: {
        contents: {
            id: string;
            size: number;
        };
    };
    rewards_pool: {
        value: number;
    };
    starting_epoch: number;
    sui_balance: number;
}, {
    delegation_token_supply: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
    pending_delegations: import("superstruct").Struct<{
        id: string;
        size: number;
        head: {
            vec: unknown[];
        };
        tail: {
            vec: unknown[];
        };
    }, {
        id: import("superstruct").Struct<string, null>;
        size: import("superstruct").Struct<number, null>;
        head: import("superstruct").Struct<{
            vec: unknown[];
        }, {
            vec: import("superstruct").Struct<unknown[], undefined>;
        }>;
        tail: import("superstruct").Struct<{
            vec: unknown[];
        }, {
            vec: import("superstruct").Struct<unknown[], undefined>;
        }>;
    }>;
    pending_withdraws: import("superstruct").Struct<{
        contents: {
            id: string;
            size: number;
        };
    }, {
        contents: import("superstruct").Struct<{
            id: string;
            size: number;
        }, {
            id: import("superstruct").Struct<string, null>;
            size: import("superstruct").Struct<number, null>;
        }>;
    }>;
    rewards_pool: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
    starting_epoch: import("superstruct").Struct<number, null>;
    sui_balance: import("superstruct").Struct<number, null>;
    validator_address: import("superstruct").Struct<string, null>;
}>;
export declare const DelegationStakingPool: import("superstruct").Struct<{
    type: string;
    fields: {
        validator_address: string;
        delegation_token_supply: {
            value: number;
        };
        pending_delegations: {
            id: string;
            size: number;
            head: {
                vec: unknown[];
            };
            tail: {
                vec: unknown[];
            };
        };
        pending_withdraws: {
            contents: {
                id: string;
                size: number;
            };
        };
        rewards_pool: {
            value: number;
        };
        starting_epoch: number;
        sui_balance: number;
    };
}, {
    type: import("superstruct").Struct<string, null>;
    fields: import("superstruct").Struct<{
        validator_address: string;
        delegation_token_supply: {
            value: number;
        };
        pending_delegations: {
            id: string;
            size: number;
            head: {
                vec: unknown[];
            };
            tail: {
                vec: unknown[];
            };
        };
        pending_withdraws: {
            contents: {
                id: string;
                size: number;
            };
        };
        rewards_pool: {
            value: number;
        };
        starting_epoch: number;
        sui_balance: number;
    }, {
        delegation_token_supply: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        pending_delegations: import("superstruct").Struct<{
            id: string;
            size: number;
            head: {
                vec: unknown[];
            };
            tail: {
                vec: unknown[];
            };
        }, {
            id: import("superstruct").Struct<string, null>;
            size: import("superstruct").Struct<number, null>;
            head: import("superstruct").Struct<{
                vec: unknown[];
            }, {
                vec: import("superstruct").Struct<unknown[], undefined>;
            }>;
            tail: import("superstruct").Struct<{
                vec: unknown[];
            }, {
                vec: import("superstruct").Struct<unknown[], undefined>;
            }>;
        }>;
        pending_withdraws: import("superstruct").Struct<{
            contents: {
                id: string;
                size: number;
            };
        }, {
            contents: import("superstruct").Struct<{
                id: string;
                size: number;
            }, {
                id: import("superstruct").Struct<string, null>;
                size: import("superstruct").Struct<number, null>;
            }>;
        }>;
        rewards_pool: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        starting_epoch: import("superstruct").Struct<number, null>;
        sui_balance: import("superstruct").Struct<number, null>;
        validator_address: import("superstruct").Struct<string, null>;
    }>;
}>;
export declare const CommitteeInfo: import("superstruct").Struct<{
    epoch: number;
    committee_info: [string, number][] | null;
}, {
    epoch: import("superstruct").Struct<number, null>;
    committee_info: import("superstruct").Struct<[string, number][] | null, import("superstruct").Struct<[string, number], null>>;
}>;
export declare const SystemParameters: import("superstruct").Struct<{
    max_validator_candidate_count: number;
    min_validator_stake: number;
    storage_gas_price?: number | undefined;
}, {
    min_validator_stake: import("superstruct").Struct<number, null>;
    max_validator_candidate_count: import("superstruct").Struct<number, null>;
    storage_gas_price: import("superstruct").Struct<number | undefined, null>;
}>;
export declare const Validator: import("superstruct").Struct<{
    metadata: {
        description: any[] | null;
        name: number[];
        sui_address: string;
        pubkey_bytes: number[];
        network_pubkey_bytes: number[];
        worker_pubkey_bytes: number[];
        proof_of_possession_bytes: number[];
        image_url: any[] | null;
        project_url: any[] | null;
        net_address: number[];
        consensus_address: number[];
        worker_address: number[];
        next_epoch_stake: number;
        next_epoch_delegation: number;
        next_epoch_gas_price: number;
        next_epoch_commission_rate: number;
    };
    voting_power: number;
    stake_amount: number;
    pending_stake: number;
    pending_withdraw: number;
    gas_price: number;
    delegation_staking_pool: {
        validator_address: string;
        delegation_token_supply: {
            value: number;
        };
        pending_delegations: {
            id: string;
            size: number;
            head: {
                vec: unknown[];
            };
            tail: {
                vec: unknown[];
            };
        };
        pending_withdraws: {
            contents: {
                id: string;
                size: number;
            };
        };
        rewards_pool: {
            value: number;
        };
        starting_epoch: number;
        sui_balance: number;
    };
    commission_rate: number;
}, {
    metadata: import("superstruct").Struct<{
        description: any[] | null;
        name: number[];
        sui_address: string;
        pubkey_bytes: number[];
        network_pubkey_bytes: number[];
        worker_pubkey_bytes: number[];
        proof_of_possession_bytes: number[];
        image_url: any[] | null;
        project_url: any[] | null;
        net_address: number[];
        consensus_address: number[];
        worker_address: number[];
        next_epoch_stake: number;
        next_epoch_delegation: number;
        next_epoch_gas_price: number;
        next_epoch_commission_rate: number;
    }, {
        sui_address: import("superstruct").Struct<string, null>;
        pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
        image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
        project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
        net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        next_epoch_stake: import("superstruct").Struct<number, null>;
        next_epoch_delegation: import("superstruct").Struct<number, null>;
        next_epoch_gas_price: import("superstruct").Struct<number, null>;
        next_epoch_commission_rate: import("superstruct").Struct<number, null>;
    }>;
    voting_power: import("superstruct").Struct<number, null>;
    stake_amount: import("superstruct").Struct<number, null>;
    pending_stake: import("superstruct").Struct<number, null>;
    pending_withdraw: import("superstruct").Struct<number, null>;
    gas_price: import("superstruct").Struct<number, null>;
    delegation_staking_pool: import("superstruct").Struct<{
        validator_address: string;
        delegation_token_supply: {
            value: number;
        };
        pending_delegations: {
            id: string;
            size: number;
            head: {
                vec: unknown[];
            };
            tail: {
                vec: unknown[];
            };
        };
        pending_withdraws: {
            contents: {
                id: string;
                size: number;
            };
        };
        rewards_pool: {
            value: number;
        };
        starting_epoch: number;
        sui_balance: number;
    }, {
        delegation_token_supply: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        pending_delegations: import("superstruct").Struct<{
            id: string;
            size: number;
            head: {
                vec: unknown[];
            };
            tail: {
                vec: unknown[];
            };
        }, {
            id: import("superstruct").Struct<string, null>;
            size: import("superstruct").Struct<number, null>;
            head: import("superstruct").Struct<{
                vec: unknown[];
            }, {
                vec: import("superstruct").Struct<unknown[], undefined>;
            }>;
            tail: import("superstruct").Struct<{
                vec: unknown[];
            }, {
                vec: import("superstruct").Struct<unknown[], undefined>;
            }>;
        }>;
        pending_withdraws: import("superstruct").Struct<{
            contents: {
                id: string;
                size: number;
            };
        }, {
            contents: import("superstruct").Struct<{
                id: string;
                size: number;
            }, {
                id: import("superstruct").Struct<string, null>;
                size: import("superstruct").Struct<number, null>;
            }>;
        }>;
        rewards_pool: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        starting_epoch: import("superstruct").Struct<number, null>;
        sui_balance: import("superstruct").Struct<number, null>;
        validator_address: import("superstruct").Struct<string, null>;
    }>;
    commission_rate: import("superstruct").Struct<number, null>;
}>;
export declare const ValidatorPair: import("superstruct").Struct<{
    from: string;
    to: string;
}, {
    from: import("superstruct").Struct<string, null>;
    to: import("superstruct").Struct<string, null>;
}>;
export declare const ValidatorSet: import("superstruct").Struct<{
    validator_stake: number;
    delegation_stake: number;
    active_validators: {
        metadata: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        };
        voting_power: number;
        stake_amount: number;
        pending_stake: number;
        pending_withdraw: number;
        gas_price: number;
        delegation_staking_pool: {
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        };
        commission_rate: number;
    }[];
    pending_validators: {
        metadata: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        };
        voting_power: number;
        stake_amount: number;
        pending_stake: number;
        pending_withdraw: number;
        gas_price: number;
        delegation_staking_pool: {
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        };
        commission_rate: number;
    }[];
    pending_removals: number[];
    next_epoch_validators: {
        description: any[] | null;
        name: number[];
        sui_address: string;
        pubkey_bytes: number[];
        network_pubkey_bytes: number[];
        worker_pubkey_bytes: number[];
        proof_of_possession_bytes: number[];
        image_url: any[] | null;
        project_url: any[] | null;
        net_address: number[];
        consensus_address: number[];
        worker_address: number[];
        next_epoch_stake: number;
        next_epoch_delegation: number;
        next_epoch_gas_price: number;
        next_epoch_commission_rate: number;
    }[];
    pending_delegation_switches: {
        contents: {
            from: string;
            to: string;
        }[];
    };
}, {
    validator_stake: import("superstruct").Struct<number, null>;
    delegation_stake: import("superstruct").Struct<number, null>;
    active_validators: import("superstruct").Struct<{
        metadata: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        };
        voting_power: number;
        stake_amount: number;
        pending_stake: number;
        pending_withdraw: number;
        gas_price: number;
        delegation_staking_pool: {
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        };
        commission_rate: number;
    }[], import("superstruct").Struct<{
        metadata: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        };
        voting_power: number;
        stake_amount: number;
        pending_stake: number;
        pending_withdraw: number;
        gas_price: number;
        delegation_staking_pool: {
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        };
        commission_rate: number;
    }, {
        metadata: import("superstruct").Struct<{
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        }, {
            sui_address: import("superstruct").Struct<string, null>;
            pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            next_epoch_stake: import("superstruct").Struct<number, null>;
            next_epoch_delegation: import("superstruct").Struct<number, null>;
            next_epoch_gas_price: import("superstruct").Struct<number, null>;
            next_epoch_commission_rate: import("superstruct").Struct<number, null>;
        }>;
        voting_power: import("superstruct").Struct<number, null>;
        stake_amount: import("superstruct").Struct<number, null>;
        pending_stake: import("superstruct").Struct<number, null>;
        pending_withdraw: import("superstruct").Struct<number, null>;
        gas_price: import("superstruct").Struct<number, null>;
        delegation_staking_pool: import("superstruct").Struct<{
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        }, {
            delegation_token_supply: import("superstruct").Struct<{
                value: number;
            }, {
                value: import("superstruct").Struct<number, null>;
            }>;
            pending_delegations: import("superstruct").Struct<{
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            }, {
                id: import("superstruct").Struct<string, null>;
                size: import("superstruct").Struct<number, null>;
                head: import("superstruct").Struct<{
                    vec: unknown[];
                }, {
                    vec: import("superstruct").Struct<unknown[], undefined>;
                }>;
                tail: import("superstruct").Struct<{
                    vec: unknown[];
                }, {
                    vec: import("superstruct").Struct<unknown[], undefined>;
                }>;
            }>;
            pending_withdraws: import("superstruct").Struct<{
                contents: {
                    id: string;
                    size: number;
                };
            }, {
                contents: import("superstruct").Struct<{
                    id: string;
                    size: number;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    size: import("superstruct").Struct<number, null>;
                }>;
            }>;
            rewards_pool: import("superstruct").Struct<{
                value: number;
            }, {
                value: import("superstruct").Struct<number, null>;
            }>;
            starting_epoch: import("superstruct").Struct<number, null>;
            sui_balance: import("superstruct").Struct<number, null>;
            validator_address: import("superstruct").Struct<string, null>;
        }>;
        commission_rate: import("superstruct").Struct<number, null>;
    }>>;
    pending_validators: import("superstruct").Struct<{
        metadata: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        };
        voting_power: number;
        stake_amount: number;
        pending_stake: number;
        pending_withdraw: number;
        gas_price: number;
        delegation_staking_pool: {
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        };
        commission_rate: number;
    }[], import("superstruct").Struct<{
        metadata: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        };
        voting_power: number;
        stake_amount: number;
        pending_stake: number;
        pending_withdraw: number;
        gas_price: number;
        delegation_staking_pool: {
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        };
        commission_rate: number;
    }, {
        metadata: import("superstruct").Struct<{
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        }, {
            sui_address: import("superstruct").Struct<string, null>;
            pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            next_epoch_stake: import("superstruct").Struct<number, null>;
            next_epoch_delegation: import("superstruct").Struct<number, null>;
            next_epoch_gas_price: import("superstruct").Struct<number, null>;
            next_epoch_commission_rate: import("superstruct").Struct<number, null>;
        }>;
        voting_power: import("superstruct").Struct<number, null>;
        stake_amount: import("superstruct").Struct<number, null>;
        pending_stake: import("superstruct").Struct<number, null>;
        pending_withdraw: import("superstruct").Struct<number, null>;
        gas_price: import("superstruct").Struct<number, null>;
        delegation_staking_pool: import("superstruct").Struct<{
            validator_address: string;
            delegation_token_supply: {
                value: number;
            };
            pending_delegations: {
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            };
            pending_withdraws: {
                contents: {
                    id: string;
                    size: number;
                };
            };
            rewards_pool: {
                value: number;
            };
            starting_epoch: number;
            sui_balance: number;
        }, {
            delegation_token_supply: import("superstruct").Struct<{
                value: number;
            }, {
                value: import("superstruct").Struct<number, null>;
            }>;
            pending_delegations: import("superstruct").Struct<{
                id: string;
                size: number;
                head: {
                    vec: unknown[];
                };
                tail: {
                    vec: unknown[];
                };
            }, {
                id: import("superstruct").Struct<string, null>;
                size: import("superstruct").Struct<number, null>;
                head: import("superstruct").Struct<{
                    vec: unknown[];
                }, {
                    vec: import("superstruct").Struct<unknown[], undefined>;
                }>;
                tail: import("superstruct").Struct<{
                    vec: unknown[];
                }, {
                    vec: import("superstruct").Struct<unknown[], undefined>;
                }>;
            }>;
            pending_withdraws: import("superstruct").Struct<{
                contents: {
                    id: string;
                    size: number;
                };
            }, {
                contents: import("superstruct").Struct<{
                    id: string;
                    size: number;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    size: import("superstruct").Struct<number, null>;
                }>;
            }>;
            rewards_pool: import("superstruct").Struct<{
                value: number;
            }, {
                value: import("superstruct").Struct<number, null>;
            }>;
            starting_epoch: import("superstruct").Struct<number, null>;
            sui_balance: import("superstruct").Struct<number, null>;
            validator_address: import("superstruct").Struct<string, null>;
        }>;
        commission_rate: import("superstruct").Struct<number, null>;
    }>>;
    pending_removals: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    next_epoch_validators: import("superstruct").Struct<{
        description: any[] | null;
        name: number[];
        sui_address: string;
        pubkey_bytes: number[];
        network_pubkey_bytes: number[];
        worker_pubkey_bytes: number[];
        proof_of_possession_bytes: number[];
        image_url: any[] | null;
        project_url: any[] | null;
        net_address: number[];
        consensus_address: number[];
        worker_address: number[];
        next_epoch_stake: number;
        next_epoch_delegation: number;
        next_epoch_gas_price: number;
        next_epoch_commission_rate: number;
    }[], import("superstruct").Struct<{
        description: any[] | null;
        name: number[];
        sui_address: string;
        pubkey_bytes: number[];
        network_pubkey_bytes: number[];
        worker_pubkey_bytes: number[];
        proof_of_possession_bytes: number[];
        image_url: any[] | null;
        project_url: any[] | null;
        net_address: number[];
        consensus_address: number[];
        worker_address: number[];
        next_epoch_stake: number;
        next_epoch_delegation: number;
        next_epoch_gas_price: number;
        next_epoch_commission_rate: number;
    }, {
        sui_address: import("superstruct").Struct<string, null>;
        pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
        image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
        project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
        net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        next_epoch_stake: import("superstruct").Struct<number, null>;
        next_epoch_delegation: import("superstruct").Struct<number, null>;
        next_epoch_gas_price: import("superstruct").Struct<number, null>;
        next_epoch_commission_rate: import("superstruct").Struct<number, null>;
    }>>;
    pending_delegation_switches: import("superstruct").Struct<{
        contents: {
            from: string;
            to: string;
        }[];
    }, {
        contents: import("superstruct").Struct<{
            from: string;
            to: string;
        }[], import("superstruct").Struct<{
            from: string;
            to: string;
        }, {
            from: import("superstruct").Struct<string, null>;
            to: import("superstruct").Struct<string, null>;
        }>>;
    }>;
}>;
export declare const SuiSystemState: import("superstruct").Struct<{
    epoch: number;
    parameters: {
        max_validator_candidate_count: number;
        min_validator_stake: number;
        storage_gas_price?: number | undefined;
    };
    info: {
        id: string;
    };
    validators: {
        validator_stake: number;
        delegation_stake: number;
        active_validators: {
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }[];
        pending_validators: {
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }[];
        pending_removals: number[];
        next_epoch_validators: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        }[];
        pending_delegation_switches: {
            contents: {
                from: string;
                to: string;
            }[];
        };
    };
    treasury_cap: {
        value: number;
    };
    storage_fund: {
        value: number;
    };
    reference_gas_price: number;
    validator_report_records: {
        contents: unknown[];
    };
    stake_subsidy: {
        balance: {
            value: number;
        };
        current_epoch_amount: number;
        epoch_counter: number;
    };
    safe_mode: boolean;
    epoch_start_timestamp_ms?: number | undefined;
}, {
    info: import("superstruct").Struct<{
        id: string;
    }, {
        id: import("superstruct").Struct<string, null>;
    }>;
    epoch: import("superstruct").Struct<number, null>;
    validators: import("superstruct").Struct<{
        validator_stake: number;
        delegation_stake: number;
        active_validators: {
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }[];
        pending_validators: {
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }[];
        pending_removals: number[];
        next_epoch_validators: {
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        }[];
        pending_delegation_switches: {
            contents: {
                from: string;
                to: string;
            }[];
        };
    }, {
        validator_stake: import("superstruct").Struct<number, null>;
        delegation_stake: import("superstruct").Struct<number, null>;
        active_validators: import("superstruct").Struct<{
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }[], import("superstruct").Struct<{
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }, {
            metadata: import("superstruct").Struct<{
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            }, {
                sui_address: import("superstruct").Struct<string, null>;
                pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
                image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
                project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
                net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                next_epoch_stake: import("superstruct").Struct<number, null>;
                next_epoch_delegation: import("superstruct").Struct<number, null>;
                next_epoch_gas_price: import("superstruct").Struct<number, null>;
                next_epoch_commission_rate: import("superstruct").Struct<number, null>;
            }>;
            voting_power: import("superstruct").Struct<number, null>;
            stake_amount: import("superstruct").Struct<number, null>;
            pending_stake: import("superstruct").Struct<number, null>;
            pending_withdraw: import("superstruct").Struct<number, null>;
            gas_price: import("superstruct").Struct<number, null>;
            delegation_staking_pool: import("superstruct").Struct<{
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            }, {
                delegation_token_supply: import("superstruct").Struct<{
                    value: number;
                }, {
                    value: import("superstruct").Struct<number, null>;
                }>;
                pending_delegations: import("superstruct").Struct<{
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                }, {
                    id: import("superstruct").Struct<string, null>;
                    size: import("superstruct").Struct<number, null>;
                    head: import("superstruct").Struct<{
                        vec: unknown[];
                    }, {
                        vec: import("superstruct").Struct<unknown[], undefined>;
                    }>;
                    tail: import("superstruct").Struct<{
                        vec: unknown[];
                    }, {
                        vec: import("superstruct").Struct<unknown[], undefined>;
                    }>;
                }>;
                pending_withdraws: import("superstruct").Struct<{
                    contents: {
                        id: string;
                        size: number;
                    };
                }, {
                    contents: import("superstruct").Struct<{
                        id: string;
                        size: number;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        size: import("superstruct").Struct<number, null>;
                    }>;
                }>;
                rewards_pool: import("superstruct").Struct<{
                    value: number;
                }, {
                    value: import("superstruct").Struct<number, null>;
                }>;
                starting_epoch: import("superstruct").Struct<number, null>;
                sui_balance: import("superstruct").Struct<number, null>;
                validator_address: import("superstruct").Struct<string, null>;
            }>;
            commission_rate: import("superstruct").Struct<number, null>;
        }>>;
        pending_validators: import("superstruct").Struct<{
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }[], import("superstruct").Struct<{
            metadata: {
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            };
            voting_power: number;
            stake_amount: number;
            pending_stake: number;
            pending_withdraw: number;
            gas_price: number;
            delegation_staking_pool: {
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            };
            commission_rate: number;
        }, {
            metadata: import("superstruct").Struct<{
                description: any[] | null;
                name: number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                proof_of_possession_bytes: number[];
                image_url: any[] | null;
                project_url: any[] | null;
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: number;
                next_epoch_delegation: number;
                next_epoch_gas_price: number;
                next_epoch_commission_rate: number;
            }, {
                sui_address: import("superstruct").Struct<string, null>;
                pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
                image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
                project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
                net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                next_epoch_stake: import("superstruct").Struct<number, null>;
                next_epoch_delegation: import("superstruct").Struct<number, null>;
                next_epoch_gas_price: import("superstruct").Struct<number, null>;
                next_epoch_commission_rate: import("superstruct").Struct<number, null>;
            }>;
            voting_power: import("superstruct").Struct<number, null>;
            stake_amount: import("superstruct").Struct<number, null>;
            pending_stake: import("superstruct").Struct<number, null>;
            pending_withdraw: import("superstruct").Struct<number, null>;
            gas_price: import("superstruct").Struct<number, null>;
            delegation_staking_pool: import("superstruct").Struct<{
                validator_address: string;
                delegation_token_supply: {
                    value: number;
                };
                pending_delegations: {
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                };
                pending_withdraws: {
                    contents: {
                        id: string;
                        size: number;
                    };
                };
                rewards_pool: {
                    value: number;
                };
                starting_epoch: number;
                sui_balance: number;
            }, {
                delegation_token_supply: import("superstruct").Struct<{
                    value: number;
                }, {
                    value: import("superstruct").Struct<number, null>;
                }>;
                pending_delegations: import("superstruct").Struct<{
                    id: string;
                    size: number;
                    head: {
                        vec: unknown[];
                    };
                    tail: {
                        vec: unknown[];
                    };
                }, {
                    id: import("superstruct").Struct<string, null>;
                    size: import("superstruct").Struct<number, null>;
                    head: import("superstruct").Struct<{
                        vec: unknown[];
                    }, {
                        vec: import("superstruct").Struct<unknown[], undefined>;
                    }>;
                    tail: import("superstruct").Struct<{
                        vec: unknown[];
                    }, {
                        vec: import("superstruct").Struct<unknown[], undefined>;
                    }>;
                }>;
                pending_withdraws: import("superstruct").Struct<{
                    contents: {
                        id: string;
                        size: number;
                    };
                }, {
                    contents: import("superstruct").Struct<{
                        id: string;
                        size: number;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        size: import("superstruct").Struct<number, null>;
                    }>;
                }>;
                rewards_pool: import("superstruct").Struct<{
                    value: number;
                }, {
                    value: import("superstruct").Struct<number, null>;
                }>;
                starting_epoch: import("superstruct").Struct<number, null>;
                sui_balance: import("superstruct").Struct<number, null>;
                validator_address: import("superstruct").Struct<string, null>;
            }>;
            commission_rate: import("superstruct").Struct<number, null>;
        }>>;
        pending_removals: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        next_epoch_validators: import("superstruct").Struct<{
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        }[], import("superstruct").Struct<{
            description: any[] | null;
            name: number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            proof_of_possession_bytes: number[];
            image_url: any[] | null;
            project_url: any[] | null;
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: number;
            next_epoch_delegation: number;
            next_epoch_gas_price: number;
            next_epoch_commission_rate: number;
        }, {
            sui_address: import("superstruct").Struct<string, null>;
            pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            proof_of_possession_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            name: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            description: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            image_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            project_url: import("superstruct").Struct<any[] | null, import("superstruct").Struct<any, null>>;
            net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            next_epoch_stake: import("superstruct").Struct<number, null>;
            next_epoch_delegation: import("superstruct").Struct<number, null>;
            next_epoch_gas_price: import("superstruct").Struct<number, null>;
            next_epoch_commission_rate: import("superstruct").Struct<number, null>;
        }>>;
        pending_delegation_switches: import("superstruct").Struct<{
            contents: {
                from: string;
                to: string;
            }[];
        }, {
            contents: import("superstruct").Struct<{
                from: string;
                to: string;
            }[], import("superstruct").Struct<{
                from: string;
                to: string;
            }, {
                from: import("superstruct").Struct<string, null>;
                to: import("superstruct").Struct<string, null>;
            }>>;
        }>;
    }>;
    treasury_cap: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
    storage_fund: import("superstruct").Struct<{
        value: number;
    }, {
        value: import("superstruct").Struct<number, null>;
    }>;
    parameters: import("superstruct").Struct<{
        max_validator_candidate_count: number;
        min_validator_stake: number;
        storage_gas_price?: number | undefined;
    }, {
        min_validator_stake: import("superstruct").Struct<number, null>;
        max_validator_candidate_count: import("superstruct").Struct<number, null>;
        storage_gas_price: import("superstruct").Struct<number | undefined, null>;
    }>;
    reference_gas_price: import("superstruct").Struct<number, null>;
    validator_report_records: import("superstruct").Struct<{
        contents: unknown[];
    }, {
        contents: import("superstruct").Struct<unknown[], undefined>;
    }>;
    stake_subsidy: import("superstruct").Struct<{
        balance: {
            value: number;
        };
        current_epoch_amount: number;
        epoch_counter: number;
    }, {
        balance: import("superstruct").Struct<{
            value: number;
        }, {
            value: import("superstruct").Struct<number, null>;
        }>;
        current_epoch_amount: import("superstruct").Struct<number, null>;
        epoch_counter: import("superstruct").Struct<number, null>;
    }>;
    safe_mode: import("superstruct").Struct<boolean, null>;
    epoch_start_timestamp_ms: import("superstruct").Struct<number | undefined, null>;
}>;
export type SuiSystemState = Infer<typeof SuiSystemState>;
export declare const MoveDelegationStakingPoolFields: import("superstruct").Struct<{
    validator_address: string;
    delegation_token_supply: {
        type: string;
        fields: {
            value: string;
        };
    };
    pending_delegations: {
        type: string;
        fields: {
            id: {
                id: string;
            };
            size: string;
            head: string | null;
            tail: string | null;
        };
    };
    pending_withdraws: {
        type: string;
        fields: {
            contents: {
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                };
            };
        };
    };
    rewards_pool: string;
    starting_epoch: string;
    sui_balance: string;
}, {
    delegation_token_supply: import("superstruct").Struct<{
        type: string;
        fields: {
            value: string;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            value: string;
        }, {
            value: import("superstruct").Struct<string, null>;
        }>;
    }>;
    pending_delegations: import("superstruct").Struct<{
        type: string;
        fields: {
            id: {
                id: string;
            };
            size: string;
            head: string | null;
            tail: string | null;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            id: {
                id: string;
            };
            size: string;
            head: string | null;
            tail: string | null;
        }, {
            id: import("superstruct").Struct<{
                id: string;
            }, {
                id: import("superstruct").Struct<string, null>;
            }>;
            head: import("superstruct").Struct<string | null, null>;
            size: import("superstruct").Struct<string, null>;
            tail: import("superstruct").Struct<string | null, null>;
        }>;
    }>;
    pending_withdraws: import("superstruct").Struct<{
        type: string;
        fields: {
            contents: {
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                };
            };
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            contents: {
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                };
            };
        }, {
            contents: import("superstruct").Struct<{
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    id: {
                        id: string;
                    };
                    size: string;
                }, {
                    id: import("superstruct").Struct<{
                        id: string;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                    }>;
                    size: import("superstruct").Struct<string, null>;
                }>;
            }>;
        }>;
    }>;
    rewards_pool: import("superstruct").Struct<string, null>;
    starting_epoch: import("superstruct").Struct<string, null>;
    sui_balance: import("superstruct").Struct<string, null>;
    validator_address: import("superstruct").Struct<string, null>;
}>;
export type MoveSuiSystemObjectFields = Infer<typeof MoveSuiSystemObjectFields>;
export type MoveSuiSystemObject = Infer<typeof MoveSuiSystemObject>;
export type MoveActiveValidator = Infer<typeof MoveActiveValidator>;
export declare const MoveNextEpochValidatorFields: import("superstruct").Struct<{
    name: string | number[];
    sui_address: string;
    pubkey_bytes: number[];
    network_pubkey_bytes: number[];
    worker_pubkey_bytes: number[];
    net_address: number[];
    consensus_address: number[];
    worker_address: number[];
    next_epoch_stake: string;
    next_epoch_delegation: string;
    next_epoch_gas_price: string;
    next_epoch_commission_rate: string;
    proof_of_possession: number[];
    description?: string | number[] | undefined;
    image_url?: string | number[] | undefined;
    project_url?: string | number[] | undefined;
}, {
    consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    name: import("superstruct").Struct<string | number[], null>;
    description: import("superstruct").Struct<string | number[] | undefined, null>;
    image_url: import("superstruct").Struct<string | number[] | undefined, null>;
    project_url: import("superstruct").Struct<string | number[] | undefined, null>;
    net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    next_epoch_commission_rate: import("superstruct").Struct<string, null>;
    next_epoch_delegation: import("superstruct").Struct<string, null>;
    next_epoch_gas_price: import("superstruct").Struct<string, null>;
    next_epoch_stake: import("superstruct").Struct<string, null>;
    proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    sui_address: import("superstruct").Struct<string, null>;
    worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
}>;
export declare const MoveActiveValidatorFields: import("superstruct").Struct<{
    metadata: {
        type: string;
        fields: {
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        };
    };
    voting_power: string | null;
    stake_amount: string;
    pending_stake: string;
    pending_withdraw: string;
    gas_price: string;
    delegation_staking_pool: {
        type: string;
        fields: {
            validator_address: string;
            delegation_token_supply: {
                type: string;
                fields: {
                    value: string;
                };
            };
            pending_delegations: {
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                    head: string | null;
                    tail: string | null;
                };
            };
            pending_withdraws: {
                type: string;
                fields: {
                    contents: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                        };
                    };
                };
            };
            rewards_pool: string;
            starting_epoch: string;
            sui_balance: string;
        };
    };
    commission_rate: string;
}, {
    commission_rate: import("superstruct").Struct<string, null>;
    delegation_staking_pool: import("superstruct").Struct<{
        type: string;
        fields: {
            validator_address: string;
            delegation_token_supply: {
                type: string;
                fields: {
                    value: string;
                };
            };
            pending_delegations: {
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                    head: string | null;
                    tail: string | null;
                };
            };
            pending_withdraws: {
                type: string;
                fields: {
                    contents: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                        };
                    };
                };
            };
            rewards_pool: string;
            starting_epoch: string;
            sui_balance: string;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            validator_address: string;
            delegation_token_supply: {
                type: string;
                fields: {
                    value: string;
                };
            };
            pending_delegations: {
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                    head: string | null;
                    tail: string | null;
                };
            };
            pending_withdraws: {
                type: string;
                fields: {
                    contents: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                        };
                    };
                };
            };
            rewards_pool: string;
            starting_epoch: string;
            sui_balance: string;
        }, {
            delegation_token_supply: import("superstruct").Struct<{
                type: string;
                fields: {
                    value: string;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    value: string;
                }, {
                    value: import("superstruct").Struct<string, null>;
                }>;
            }>;
            pending_delegations: import("superstruct").Struct<{
                type: string;
                fields: {
                    id: {
                        id: string;
                    };
                    size: string;
                    head: string | null;
                    tail: string | null;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    id: {
                        id: string;
                    };
                    size: string;
                    head: string | null;
                    tail: string | null;
                }, {
                    id: import("superstruct").Struct<{
                        id: string;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                    }>;
                    head: import("superstruct").Struct<string | null, null>;
                    size: import("superstruct").Struct<string, null>;
                    tail: import("superstruct").Struct<string | null, null>;
                }>;
            }>;
            pending_withdraws: import("superstruct").Struct<{
                type: string;
                fields: {
                    contents: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                        };
                    };
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    contents: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                        };
                    };
                }, {
                    contents: import("superstruct").Struct<{
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                        };
                    }, {
                        type: import("superstruct").Struct<string, null>;
                        fields: import("superstruct").Struct<{
                            id: {
                                id: string;
                            };
                            size: string;
                        }, {
                            id: import("superstruct").Struct<{
                                id: string;
                            }, {
                                id: import("superstruct").Struct<string, null>;
                            }>;
                            size: import("superstruct").Struct<string, null>;
                        }>;
                    }>;
                }>;
            }>;
            rewards_pool: import("superstruct").Struct<string, null>;
            starting_epoch: import("superstruct").Struct<string, null>;
            sui_balance: import("superstruct").Struct<string, null>;
            validator_address: import("superstruct").Struct<string, null>;
        }>;
    }>;
    gas_price: import("superstruct").Struct<string, null>;
    metadata: import("superstruct").Struct<{
        type: string;
        fields: {
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        }, {
            consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            name: import("superstruct").Struct<string | number[], null>;
            description: import("superstruct").Struct<string | number[] | undefined, null>;
            image_url: import("superstruct").Struct<string | number[] | undefined, null>;
            project_url: import("superstruct").Struct<string | number[] | undefined, null>;
            net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            next_epoch_commission_rate: import("superstruct").Struct<string, null>;
            next_epoch_delegation: import("superstruct").Struct<string, null>;
            next_epoch_gas_price: import("superstruct").Struct<string, null>;
            next_epoch_stake: import("superstruct").Struct<string, null>;
            proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            sui_address: import("superstruct").Struct<string, null>;
            worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        }>;
    }>;
    pending_stake: import("superstruct").Struct<string, null>;
    pending_withdraw: import("superstruct").Struct<string, null>;
    stake_amount: import("superstruct").Struct<string, null>;
    voting_power: import("superstruct").Struct<string | null, null>;
}>;
export declare const MoveActiveValidator: import("superstruct").Struct<{
    type: string;
    fields: {
        metadata: {
            type: string;
            fields: {
                name: string | number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: string;
                next_epoch_delegation: string;
                next_epoch_gas_price: string;
                next_epoch_commission_rate: string;
                proof_of_possession: number[];
                description?: string | number[] | undefined;
                image_url?: string | number[] | undefined;
                project_url?: string | number[] | undefined;
            };
        };
        voting_power: string | null;
        stake_amount: string;
        pending_stake: string;
        pending_withdraw: string;
        gas_price: string;
        delegation_staking_pool: {
            type: string;
            fields: {
                validator_address: string;
                delegation_token_supply: {
                    type: string;
                    fields: {
                        value: string;
                    };
                };
                pending_delegations: {
                    type: string;
                    fields: {
                        id: {
                            id: string;
                        };
                        size: string;
                        head: string | null;
                        tail: string | null;
                    };
                };
                pending_withdraws: {
                    type: string;
                    fields: {
                        contents: {
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        };
                    };
                };
                rewards_pool: string;
                starting_epoch: string;
                sui_balance: string;
            };
        };
        commission_rate: string;
    };
}, {
    type: import("superstruct").Struct<string, null>;
    fields: import("superstruct").Struct<{
        metadata: {
            type: string;
            fields: {
                name: string | number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: string;
                next_epoch_delegation: string;
                next_epoch_gas_price: string;
                next_epoch_commission_rate: string;
                proof_of_possession: number[];
                description?: string | number[] | undefined;
                image_url?: string | number[] | undefined;
                project_url?: string | number[] | undefined;
            };
        };
        voting_power: string | null;
        stake_amount: string;
        pending_stake: string;
        pending_withdraw: string;
        gas_price: string;
        delegation_staking_pool: {
            type: string;
            fields: {
                validator_address: string;
                delegation_token_supply: {
                    type: string;
                    fields: {
                        value: string;
                    };
                };
                pending_delegations: {
                    type: string;
                    fields: {
                        id: {
                            id: string;
                        };
                        size: string;
                        head: string | null;
                        tail: string | null;
                    };
                };
                pending_withdraws: {
                    type: string;
                    fields: {
                        contents: {
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        };
                    };
                };
                rewards_pool: string;
                starting_epoch: string;
                sui_balance: string;
            };
        };
        commission_rate: string;
    }, {
        commission_rate: import("superstruct").Struct<string, null>;
        delegation_staking_pool: import("superstruct").Struct<{
            type: string;
            fields: {
                validator_address: string;
                delegation_token_supply: {
                    type: string;
                    fields: {
                        value: string;
                    };
                };
                pending_delegations: {
                    type: string;
                    fields: {
                        id: {
                            id: string;
                        };
                        size: string;
                        head: string | null;
                        tail: string | null;
                    };
                };
                pending_withdraws: {
                    type: string;
                    fields: {
                        contents: {
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        };
                    };
                };
                rewards_pool: string;
                starting_epoch: string;
                sui_balance: string;
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                validator_address: string;
                delegation_token_supply: {
                    type: string;
                    fields: {
                        value: string;
                    };
                };
                pending_delegations: {
                    type: string;
                    fields: {
                        id: {
                            id: string;
                        };
                        size: string;
                        head: string | null;
                        tail: string | null;
                    };
                };
                pending_withdraws: {
                    type: string;
                    fields: {
                        contents: {
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        };
                    };
                };
                rewards_pool: string;
                starting_epoch: string;
                sui_balance: string;
            }, {
                delegation_token_supply: import("superstruct").Struct<{
                    type: string;
                    fields: {
                        value: string;
                    };
                }, {
                    type: import("superstruct").Struct<string, null>;
                    fields: import("superstruct").Struct<{
                        value: string;
                    }, {
                        value: import("superstruct").Struct<string, null>;
                    }>;
                }>;
                pending_delegations: import("superstruct").Struct<{
                    type: string;
                    fields: {
                        id: {
                            id: string;
                        };
                        size: string;
                        head: string | null;
                        tail: string | null;
                    };
                }, {
                    type: import("superstruct").Struct<string, null>;
                    fields: import("superstruct").Struct<{
                        id: {
                            id: string;
                        };
                        size: string;
                        head: string | null;
                        tail: string | null;
                    }, {
                        id: import("superstruct").Struct<{
                            id: string;
                        }, {
                            id: import("superstruct").Struct<string, null>;
                        }>;
                        head: import("superstruct").Struct<string | null, null>;
                        size: import("superstruct").Struct<string, null>;
                        tail: import("superstruct").Struct<string | null, null>;
                    }>;
                }>;
                pending_withdraws: import("superstruct").Struct<{
                    type: string;
                    fields: {
                        contents: {
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        };
                    };
                }, {
                    type: import("superstruct").Struct<string, null>;
                    fields: import("superstruct").Struct<{
                        contents: {
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        };
                    }, {
                        contents: import("superstruct").Struct<{
                            type: string;
                            fields: {
                                id: {
                                    id: string;
                                };
                                size: string;
                            };
                        }, {
                            type: import("superstruct").Struct<string, null>;
                            fields: import("superstruct").Struct<{
                                id: {
                                    id: string;
                                };
                                size: string;
                            }, {
                                id: import("superstruct").Struct<{
                                    id: string;
                                }, {
                                    id: import("superstruct").Struct<string, null>;
                                }>;
                                size: import("superstruct").Struct<string, null>;
                            }>;
                        }>;
                    }>;
                }>;
                rewards_pool: import("superstruct").Struct<string, null>;
                starting_epoch: import("superstruct").Struct<string, null>;
                sui_balance: import("superstruct").Struct<string, null>;
                validator_address: import("superstruct").Struct<string, null>;
            }>;
        }>;
        gas_price: import("superstruct").Struct<string, null>;
        metadata: import("superstruct").Struct<{
            type: string;
            fields: {
                name: string | number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: string;
                next_epoch_delegation: string;
                next_epoch_gas_price: string;
                next_epoch_commission_rate: string;
                proof_of_possession: number[];
                description?: string | number[] | undefined;
                image_url?: string | number[] | undefined;
                project_url?: string | number[] | undefined;
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                name: string | number[];
                sui_address: string;
                pubkey_bytes: number[];
                network_pubkey_bytes: number[];
                worker_pubkey_bytes: number[];
                net_address: number[];
                consensus_address: number[];
                worker_address: number[];
                next_epoch_stake: string;
                next_epoch_delegation: string;
                next_epoch_gas_price: string;
                next_epoch_commission_rate: string;
                proof_of_possession: number[];
                description?: string | number[] | undefined;
                image_url?: string | number[] | undefined;
                project_url?: string | number[] | undefined;
            }, {
                consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                name: import("superstruct").Struct<string | number[], null>;
                description: import("superstruct").Struct<string | number[] | undefined, null>;
                image_url: import("superstruct").Struct<string | number[] | undefined, null>;
                project_url: import("superstruct").Struct<string | number[] | undefined, null>;
                net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                next_epoch_commission_rate: import("superstruct").Struct<string, null>;
                next_epoch_delegation: import("superstruct").Struct<string, null>;
                next_epoch_gas_price: import("superstruct").Struct<string, null>;
                next_epoch_stake: import("superstruct").Struct<string, null>;
                proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                sui_address: import("superstruct").Struct<string, null>;
                worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            }>;
        }>;
        pending_stake: import("superstruct").Struct<string, null>;
        pending_withdraw: import("superstruct").Struct<string, null>;
        stake_amount: import("superstruct").Struct<string, null>;
        voting_power: import("superstruct").Struct<string | null, null>;
    }>;
}>;
export declare const MoveValidatorsFieldsClass: import("superstruct").Struct<{
    active_validators: {
        type: string;
        fields: {
            metadata: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            };
            voting_power: string | null;
            stake_amount: string;
            pending_stake: string;
            pending_withdraw: string;
            gas_price: string;
            delegation_staking_pool: {
                type: string;
                fields: {
                    validator_address: string;
                    delegation_token_supply: {
                        type: string;
                        fields: {
                            value: string;
                        };
                    };
                    pending_delegations: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    };
                    pending_withdraws: {
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    };
                    rewards_pool: string;
                    starting_epoch: string;
                    sui_balance: string;
                };
            };
            commission_rate: string;
        };
    }[];
    pending_validators: number[];
    pending_removals: number[];
    next_epoch_validators: {
        type: string;
        fields: {
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        };
    }[];
    pending_delegation_switches: {
        type: string;
        fields: {
            contents: any[];
        };
    };
    total_delegation_stake: string;
    total_validator_stake: string;
    quorum_stake_threshold?: string | undefined;
}, {
    active_validators: import("superstruct").Struct<{
        type: string;
        fields: {
            metadata: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            };
            voting_power: string | null;
            stake_amount: string;
            pending_stake: string;
            pending_withdraw: string;
            gas_price: string;
            delegation_staking_pool: {
                type: string;
                fields: {
                    validator_address: string;
                    delegation_token_supply: {
                        type: string;
                        fields: {
                            value: string;
                        };
                    };
                    pending_delegations: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    };
                    pending_withdraws: {
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    };
                    rewards_pool: string;
                    starting_epoch: string;
                    sui_balance: string;
                };
            };
            commission_rate: string;
        };
    }[], import("superstruct").Struct<{
        type: string;
        fields: {
            metadata: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            };
            voting_power: string | null;
            stake_amount: string;
            pending_stake: string;
            pending_withdraw: string;
            gas_price: string;
            delegation_staking_pool: {
                type: string;
                fields: {
                    validator_address: string;
                    delegation_token_supply: {
                        type: string;
                        fields: {
                            value: string;
                        };
                    };
                    pending_delegations: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    };
                    pending_withdraws: {
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    };
                    rewards_pool: string;
                    starting_epoch: string;
                    sui_balance: string;
                };
            };
            commission_rate: string;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            metadata: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            };
            voting_power: string | null;
            stake_amount: string;
            pending_stake: string;
            pending_withdraw: string;
            gas_price: string;
            delegation_staking_pool: {
                type: string;
                fields: {
                    validator_address: string;
                    delegation_token_supply: {
                        type: string;
                        fields: {
                            value: string;
                        };
                    };
                    pending_delegations: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    };
                    pending_withdraws: {
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    };
                    rewards_pool: string;
                    starting_epoch: string;
                    sui_balance: string;
                };
            };
            commission_rate: string;
        }, {
            commission_rate: import("superstruct").Struct<string, null>;
            delegation_staking_pool: import("superstruct").Struct<{
                type: string;
                fields: {
                    validator_address: string;
                    delegation_token_supply: {
                        type: string;
                        fields: {
                            value: string;
                        };
                    };
                    pending_delegations: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    };
                    pending_withdraws: {
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    };
                    rewards_pool: string;
                    starting_epoch: string;
                    sui_balance: string;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    validator_address: string;
                    delegation_token_supply: {
                        type: string;
                        fields: {
                            value: string;
                        };
                    };
                    pending_delegations: {
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    };
                    pending_withdraws: {
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    };
                    rewards_pool: string;
                    starting_epoch: string;
                    sui_balance: string;
                }, {
                    delegation_token_supply: import("superstruct").Struct<{
                        type: string;
                        fields: {
                            value: string;
                        };
                    }, {
                        type: import("superstruct").Struct<string, null>;
                        fields: import("superstruct").Struct<{
                            value: string;
                        }, {
                            value: import("superstruct").Struct<string, null>;
                        }>;
                    }>;
                    pending_delegations: import("superstruct").Struct<{
                        type: string;
                        fields: {
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        };
                    }, {
                        type: import("superstruct").Struct<string, null>;
                        fields: import("superstruct").Struct<{
                            id: {
                                id: string;
                            };
                            size: string;
                            head: string | null;
                            tail: string | null;
                        }, {
                            id: import("superstruct").Struct<{
                                id: string;
                            }, {
                                id: import("superstruct").Struct<string, null>;
                            }>;
                            head: import("superstruct").Struct<string | null, null>;
                            size: import("superstruct").Struct<string, null>;
                            tail: import("superstruct").Struct<string | null, null>;
                        }>;
                    }>;
                    pending_withdraws: import("superstruct").Struct<{
                        type: string;
                        fields: {
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        };
                    }, {
                        type: import("superstruct").Struct<string, null>;
                        fields: import("superstruct").Struct<{
                            contents: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            };
                        }, {
                            contents: import("superstruct").Struct<{
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                };
                            }, {
                                type: import("superstruct").Struct<string, null>;
                                fields: import("superstruct").Struct<{
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                }, {
                                    id: import("superstruct").Struct<{
                                        id: string;
                                    }, {
                                        id: import("superstruct").Struct<string, null>;
                                    }>;
                                    size: import("superstruct").Struct<string, null>;
                                }>;
                            }>;
                        }>;
                    }>;
                    rewards_pool: import("superstruct").Struct<string, null>;
                    starting_epoch: import("superstruct").Struct<string, null>;
                    sui_balance: import("superstruct").Struct<string, null>;
                    validator_address: import("superstruct").Struct<string, null>;
                }>;
            }>;
            gas_price: import("superstruct").Struct<string, null>;
            metadata: import("superstruct").Struct<{
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                }, {
                    consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    name: import("superstruct").Struct<string | number[], null>;
                    description: import("superstruct").Struct<string | number[] | undefined, null>;
                    image_url: import("superstruct").Struct<string | number[] | undefined, null>;
                    project_url: import("superstruct").Struct<string | number[] | undefined, null>;
                    net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    next_epoch_commission_rate: import("superstruct").Struct<string, null>;
                    next_epoch_delegation: import("superstruct").Struct<string, null>;
                    next_epoch_gas_price: import("superstruct").Struct<string, null>;
                    next_epoch_stake: import("superstruct").Struct<string, null>;
                    proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    sui_address: import("superstruct").Struct<string, null>;
                    worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                }>;
            }>;
            pending_stake: import("superstruct").Struct<string, null>;
            pending_withdraw: import("superstruct").Struct<string, null>;
            stake_amount: import("superstruct").Struct<string, null>;
            voting_power: import("superstruct").Struct<string | null, null>;
        }>;
    }>>;
    next_epoch_validators: import("superstruct").Struct<{
        type: string;
        fields: {
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        };
    }[], import("superstruct").Struct<{
        type: string;
        fields: {
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            name: string | number[];
            sui_address: string;
            pubkey_bytes: number[];
            network_pubkey_bytes: number[];
            worker_pubkey_bytes: number[];
            net_address: number[];
            consensus_address: number[];
            worker_address: number[];
            next_epoch_stake: string;
            next_epoch_delegation: string;
            next_epoch_gas_price: string;
            next_epoch_commission_rate: string;
            proof_of_possession: number[];
            description?: string | number[] | undefined;
            image_url?: string | number[] | undefined;
            project_url?: string | number[] | undefined;
        }, {
            consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            name: import("superstruct").Struct<string | number[], null>;
            description: import("superstruct").Struct<string | number[] | undefined, null>;
            image_url: import("superstruct").Struct<string | number[] | undefined, null>;
            project_url: import("superstruct").Struct<string | number[] | undefined, null>;
            net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            next_epoch_commission_rate: import("superstruct").Struct<string, null>;
            next_epoch_delegation: import("superstruct").Struct<string, null>;
            next_epoch_gas_price: import("superstruct").Struct<string, null>;
            next_epoch_stake: import("superstruct").Struct<string, null>;
            proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            sui_address: import("superstruct").Struct<string, null>;
            worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
        }>;
    }>>;
    pending_delegation_switches: import("superstruct").Struct<{
        type: string;
        fields: {
            contents: any[];
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            contents: any[];
        }, {
            contents: import("superstruct").Struct<any[], import("superstruct").Struct<any, null>>;
        }>;
    }>;
    pending_removals: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    pending_validators: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
    quorum_stake_threshold: import("superstruct").Struct<string | undefined, null>;
    total_delegation_stake: import("superstruct").Struct<string, null>;
    total_validator_stake: import("superstruct").Struct<string, null>;
}>;
export declare const MoveSuiSystemObjectFields: import("superstruct").Struct<{
    id: {
        id: string;
    };
    epoch: string;
    parameters: {
        type: string;
        fields: {
            max_validator_candidate_count: string;
            min_validator_stake: string;
            storage_gas_price?: string | undefined;
        };
    };
    validators: {
        type: string;
        fields: {
            active_validators: {
                type: string;
                fields: {
                    metadata: {
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    };
                    voting_power: string | null;
                    stake_amount: string;
                    pending_stake: string;
                    pending_withdraw: string;
                    gas_price: string;
                    delegation_staking_pool: {
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    };
                    commission_rate: string;
                };
            }[];
            pending_validators: number[];
            pending_removals: number[];
            next_epoch_validators: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            }[];
            pending_delegation_switches: {
                type: string;
                fields: {
                    contents: any[];
                };
            };
            total_delegation_stake: string;
            total_validator_stake: string;
            quorum_stake_threshold?: string | undefined;
        };
    };
    storage_fund: string;
    reference_gas_price: string;
    validator_report_records: {
        type: string;
        fields: {
            contents: any[];
        };
    };
    stake_subsidy: {
        type: string;
        fields: {
            balance: string;
            current_epoch_amount: string;
            epoch_counter: string;
        };
    };
    safe_mode: boolean;
    sui_supply: {
        type: string;
        fields: {
            value: string;
        };
    };
    epoch_start_timestamp_ms?: string | undefined;
    chain_id?: number | undefined;
}, {
    chain_id: import("superstruct").Struct<number | undefined, null>;
    epoch: import("superstruct").Struct<string, null>;
    epoch_start_timestamp_ms: import("superstruct").Struct<string | undefined, null>;
    safe_mode: import("superstruct").Struct<boolean, null>;
    id: import("superstruct").Struct<{
        id: string;
    }, {
        id: import("superstruct").Struct<string, null>;
    }>;
    parameters: import("superstruct").Struct<{
        type: string;
        fields: {
            max_validator_candidate_count: string;
            min_validator_stake: string;
            storage_gas_price?: string | undefined;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            max_validator_candidate_count: string;
            min_validator_stake: string;
            storage_gas_price?: string | undefined;
        }, {
            max_validator_candidate_count: import("superstruct").Struct<string, null>;
            min_validator_stake: import("superstruct").Struct<string, null>;
            storage_gas_price: import("superstruct").Struct<string | undefined, null>;
        }>;
    }>;
    reference_gas_price: import("superstruct").Struct<string, null>;
    stake_subsidy: import("superstruct").Struct<{
        type: string;
        fields: {
            balance: string;
            current_epoch_amount: string;
            epoch_counter: string;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            balance: string;
            current_epoch_amount: string;
            epoch_counter: string;
        }, {
            balance: import("superstruct").Struct<string, null>;
            current_epoch_amount: import("superstruct").Struct<string, null>;
            epoch_counter: import("superstruct").Struct<string, null>;
        }>;
    }>;
    storage_fund: import("superstruct").Struct<string, null>;
    sui_supply: import("superstruct").Struct<{
        type: string;
        fields: {
            value: string;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            value: string;
        }, {
            value: import("superstruct").Struct<string, null>;
        }>;
    }>;
    validator_report_records: import("superstruct").Struct<{
        type: string;
        fields: {
            contents: any[];
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            contents: any[];
        }, {
            contents: import("superstruct").Struct<any[], import("superstruct").Struct<any, null>>;
        }>;
    }>;
    validators: import("superstruct").Struct<{
        type: string;
        fields: {
            active_validators: {
                type: string;
                fields: {
                    metadata: {
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    };
                    voting_power: string | null;
                    stake_amount: string;
                    pending_stake: string;
                    pending_withdraw: string;
                    gas_price: string;
                    delegation_staking_pool: {
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    };
                    commission_rate: string;
                };
            }[];
            pending_validators: number[];
            pending_removals: number[];
            next_epoch_validators: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            }[];
            pending_delegation_switches: {
                type: string;
                fields: {
                    contents: any[];
                };
            };
            total_delegation_stake: string;
            total_validator_stake: string;
            quorum_stake_threshold?: string | undefined;
        };
    }, {
        type: import("superstruct").Struct<string, null>;
        fields: import("superstruct").Struct<{
            active_validators: {
                type: string;
                fields: {
                    metadata: {
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    };
                    voting_power: string | null;
                    stake_amount: string;
                    pending_stake: string;
                    pending_withdraw: string;
                    gas_price: string;
                    delegation_staking_pool: {
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    };
                    commission_rate: string;
                };
            }[];
            pending_validators: number[];
            pending_removals: number[];
            next_epoch_validators: {
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            }[];
            pending_delegation_switches: {
                type: string;
                fields: {
                    contents: any[];
                };
            };
            total_delegation_stake: string;
            total_validator_stake: string;
            quorum_stake_threshold?: string | undefined;
        }, {
            active_validators: import("superstruct").Struct<{
                type: string;
                fields: {
                    metadata: {
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    };
                    voting_power: string | null;
                    stake_amount: string;
                    pending_stake: string;
                    pending_withdraw: string;
                    gas_price: string;
                    delegation_staking_pool: {
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    };
                    commission_rate: string;
                };
            }[], import("superstruct").Struct<{
                type: string;
                fields: {
                    metadata: {
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    };
                    voting_power: string | null;
                    stake_amount: string;
                    pending_stake: string;
                    pending_withdraw: string;
                    gas_price: string;
                    delegation_staking_pool: {
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    };
                    commission_rate: string;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    metadata: {
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    };
                    voting_power: string | null;
                    stake_amount: string;
                    pending_stake: string;
                    pending_withdraw: string;
                    gas_price: string;
                    delegation_staking_pool: {
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    };
                    commission_rate: string;
                }, {
                    commission_rate: import("superstruct").Struct<string, null>;
                    delegation_staking_pool: import("superstruct").Struct<{
                        type: string;
                        fields: {
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        };
                    }, {
                        type: import("superstruct").Struct<string, null>;
                        fields: import("superstruct").Struct<{
                            validator_address: string;
                            delegation_token_supply: {
                                type: string;
                                fields: {
                                    value: string;
                                };
                            };
                            pending_delegations: {
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            };
                            pending_withdraws: {
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            };
                            rewards_pool: string;
                            starting_epoch: string;
                            sui_balance: string;
                        }, {
                            delegation_token_supply: import("superstruct").Struct<{
                                type: string;
                                fields: {
                                    value: string;
                                };
                            }, {
                                type: import("superstruct").Struct<string, null>;
                                fields: import("superstruct").Struct<{
                                    value: string;
                                }, {
                                    value: import("superstruct").Struct<string, null>;
                                }>;
                            }>;
                            pending_delegations: import("superstruct").Struct<{
                                type: string;
                                fields: {
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                };
                            }, {
                                type: import("superstruct").Struct<string, null>;
                                fields: import("superstruct").Struct<{
                                    id: {
                                        id: string;
                                    };
                                    size: string;
                                    head: string | null;
                                    tail: string | null;
                                }, {
                                    id: import("superstruct").Struct<{
                                        id: string;
                                    }, {
                                        id: import("superstruct").Struct<string, null>;
                                    }>;
                                    head: import("superstruct").Struct<string | null, null>;
                                    size: import("superstruct").Struct<string, null>;
                                    tail: import("superstruct").Struct<string | null, null>;
                                }>;
                            }>;
                            pending_withdraws: import("superstruct").Struct<{
                                type: string;
                                fields: {
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                };
                            }, {
                                type: import("superstruct").Struct<string, null>;
                                fields: import("superstruct").Struct<{
                                    contents: {
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    };
                                }, {
                                    contents: import("superstruct").Struct<{
                                        type: string;
                                        fields: {
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        };
                                    }, {
                                        type: import("superstruct").Struct<string, null>;
                                        fields: import("superstruct").Struct<{
                                            id: {
                                                id: string;
                                            };
                                            size: string;
                                        }, {
                                            id: import("superstruct").Struct<{
                                                id: string;
                                            }, {
                                                id: import("superstruct").Struct<string, null>;
                                            }>;
                                            size: import("superstruct").Struct<string, null>;
                                        }>;
                                    }>;
                                }>;
                            }>;
                            rewards_pool: import("superstruct").Struct<string, null>;
                            starting_epoch: import("superstruct").Struct<string, null>;
                            sui_balance: import("superstruct").Struct<string, null>;
                            validator_address: import("superstruct").Struct<string, null>;
                        }>;
                    }>;
                    gas_price: import("superstruct").Struct<string, null>;
                    metadata: import("superstruct").Struct<{
                        type: string;
                        fields: {
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        };
                    }, {
                        type: import("superstruct").Struct<string, null>;
                        fields: import("superstruct").Struct<{
                            name: string | number[];
                            sui_address: string;
                            pubkey_bytes: number[];
                            network_pubkey_bytes: number[];
                            worker_pubkey_bytes: number[];
                            net_address: number[];
                            consensus_address: number[];
                            worker_address: number[];
                            next_epoch_stake: string;
                            next_epoch_delegation: string;
                            next_epoch_gas_price: string;
                            next_epoch_commission_rate: string;
                            proof_of_possession: number[];
                            description?: string | number[] | undefined;
                            image_url?: string | number[] | undefined;
                            project_url?: string | number[] | undefined;
                        }, {
                            consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            name: import("superstruct").Struct<string | number[], null>;
                            description: import("superstruct").Struct<string | number[] | undefined, null>;
                            image_url: import("superstruct").Struct<string | number[] | undefined, null>;
                            project_url: import("superstruct").Struct<string | number[] | undefined, null>;
                            net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            next_epoch_commission_rate: import("superstruct").Struct<string, null>;
                            next_epoch_delegation: import("superstruct").Struct<string, null>;
                            next_epoch_gas_price: import("superstruct").Struct<string, null>;
                            next_epoch_stake: import("superstruct").Struct<string, null>;
                            proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            sui_address: import("superstruct").Struct<string, null>;
                            worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        }>;
                    }>;
                    pending_stake: import("superstruct").Struct<string, null>;
                    pending_withdraw: import("superstruct").Struct<string, null>;
                    stake_amount: import("superstruct").Struct<string, null>;
                    voting_power: import("superstruct").Struct<string | null, null>;
                }>;
            }>>;
            next_epoch_validators: import("superstruct").Struct<{
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            }[], import("superstruct").Struct<{
                type: string;
                fields: {
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    name: string | number[];
                    sui_address: string;
                    pubkey_bytes: number[];
                    network_pubkey_bytes: number[];
                    worker_pubkey_bytes: number[];
                    net_address: number[];
                    consensus_address: number[];
                    worker_address: number[];
                    next_epoch_stake: string;
                    next_epoch_delegation: string;
                    next_epoch_gas_price: string;
                    next_epoch_commission_rate: string;
                    proof_of_possession: number[];
                    description?: string | number[] | undefined;
                    image_url?: string | number[] | undefined;
                    project_url?: string | number[] | undefined;
                }, {
                    consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    name: import("superstruct").Struct<string | number[], null>;
                    description: import("superstruct").Struct<string | number[] | undefined, null>;
                    image_url: import("superstruct").Struct<string | number[] | undefined, null>;
                    project_url: import("superstruct").Struct<string | number[] | undefined, null>;
                    net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    next_epoch_commission_rate: import("superstruct").Struct<string, null>;
                    next_epoch_delegation: import("superstruct").Struct<string, null>;
                    next_epoch_gas_price: import("superstruct").Struct<string, null>;
                    next_epoch_stake: import("superstruct").Struct<string, null>;
                    proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    sui_address: import("superstruct").Struct<string, null>;
                    worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                }>;
            }>>;
            pending_delegation_switches: import("superstruct").Struct<{
                type: string;
                fields: {
                    contents: any[];
                };
            }, {
                type: import("superstruct").Struct<string, null>;
                fields: import("superstruct").Struct<{
                    contents: any[];
                }, {
                    contents: import("superstruct").Struct<any[], import("superstruct").Struct<any, null>>;
                }>;
            }>;
            pending_removals: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            pending_validators: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
            quorum_stake_threshold: import("superstruct").Struct<string | undefined, null>;
            total_delegation_stake: import("superstruct").Struct<string, null>;
            total_validator_stake: import("superstruct").Struct<string, null>;
        }>;
    }>;
}>;
export declare const MoveSuiSystemObject: import("superstruct").Struct<{
    type: string;
    fields: {
        id: {
            id: string;
        };
        epoch: string;
        parameters: {
            type: string;
            fields: {
                max_validator_candidate_count: string;
                min_validator_stake: string;
                storage_gas_price?: string | undefined;
            };
        };
        validators: {
            type: string;
            fields: {
                active_validators: {
                    type: string;
                    fields: {
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    };
                }[];
                pending_validators: number[];
                pending_removals: number[];
                next_epoch_validators: {
                    type: string;
                    fields: {
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    };
                }[];
                pending_delegation_switches: {
                    type: string;
                    fields: {
                        contents: any[];
                    };
                };
                total_delegation_stake: string;
                total_validator_stake: string;
                quorum_stake_threshold?: string | undefined;
            };
        };
        storage_fund: string;
        reference_gas_price: string;
        validator_report_records: {
            type: string;
            fields: {
                contents: any[];
            };
        };
        stake_subsidy: {
            type: string;
            fields: {
                balance: string;
                current_epoch_amount: string;
                epoch_counter: string;
            };
        };
        safe_mode: boolean;
        sui_supply: {
            type: string;
            fields: {
                value: string;
            };
        };
        epoch_start_timestamp_ms?: string | undefined;
        chain_id?: number | undefined;
    };
    has_public_transfer: boolean;
    dataType: "moveObject";
}, {
    dataType: import("superstruct").Struct<"moveObject", "moveObject">;
    type: import("superstruct").Struct<string, null>;
    has_public_transfer: import("superstruct").Struct<boolean, null>;
    fields: import("superstruct").Struct<{
        id: {
            id: string;
        };
        epoch: string;
        parameters: {
            type: string;
            fields: {
                max_validator_candidate_count: string;
                min_validator_stake: string;
                storage_gas_price?: string | undefined;
            };
        };
        validators: {
            type: string;
            fields: {
                active_validators: {
                    type: string;
                    fields: {
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    };
                }[];
                pending_validators: number[];
                pending_removals: number[];
                next_epoch_validators: {
                    type: string;
                    fields: {
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    };
                }[];
                pending_delegation_switches: {
                    type: string;
                    fields: {
                        contents: any[];
                    };
                };
                total_delegation_stake: string;
                total_validator_stake: string;
                quorum_stake_threshold?: string | undefined;
            };
        };
        storage_fund: string;
        reference_gas_price: string;
        validator_report_records: {
            type: string;
            fields: {
                contents: any[];
            };
        };
        stake_subsidy: {
            type: string;
            fields: {
                balance: string;
                current_epoch_amount: string;
                epoch_counter: string;
            };
        };
        safe_mode: boolean;
        sui_supply: {
            type: string;
            fields: {
                value: string;
            };
        };
        epoch_start_timestamp_ms?: string | undefined;
        chain_id?: number | undefined;
    }, {
        chain_id: import("superstruct").Struct<number | undefined, null>;
        epoch: import("superstruct").Struct<string, null>;
        epoch_start_timestamp_ms: import("superstruct").Struct<string | undefined, null>;
        safe_mode: import("superstruct").Struct<boolean, null>;
        id: import("superstruct").Struct<{
            id: string;
        }, {
            id: import("superstruct").Struct<string, null>;
        }>;
        parameters: import("superstruct").Struct<{
            type: string;
            fields: {
                max_validator_candidate_count: string;
                min_validator_stake: string;
                storage_gas_price?: string | undefined;
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                max_validator_candidate_count: string;
                min_validator_stake: string;
                storage_gas_price?: string | undefined;
            }, {
                max_validator_candidate_count: import("superstruct").Struct<string, null>;
                min_validator_stake: import("superstruct").Struct<string, null>;
                storage_gas_price: import("superstruct").Struct<string | undefined, null>;
            }>;
        }>;
        reference_gas_price: import("superstruct").Struct<string, null>;
        stake_subsidy: import("superstruct").Struct<{
            type: string;
            fields: {
                balance: string;
                current_epoch_amount: string;
                epoch_counter: string;
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                balance: string;
                current_epoch_amount: string;
                epoch_counter: string;
            }, {
                balance: import("superstruct").Struct<string, null>;
                current_epoch_amount: import("superstruct").Struct<string, null>;
                epoch_counter: import("superstruct").Struct<string, null>;
            }>;
        }>;
        storage_fund: import("superstruct").Struct<string, null>;
        sui_supply: import("superstruct").Struct<{
            type: string;
            fields: {
                value: string;
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                value: string;
            }, {
                value: import("superstruct").Struct<string, null>;
            }>;
        }>;
        validator_report_records: import("superstruct").Struct<{
            type: string;
            fields: {
                contents: any[];
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                contents: any[];
            }, {
                contents: import("superstruct").Struct<any[], import("superstruct").Struct<any, null>>;
            }>;
        }>;
        validators: import("superstruct").Struct<{
            type: string;
            fields: {
                active_validators: {
                    type: string;
                    fields: {
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    };
                }[];
                pending_validators: number[];
                pending_removals: number[];
                next_epoch_validators: {
                    type: string;
                    fields: {
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    };
                }[];
                pending_delegation_switches: {
                    type: string;
                    fields: {
                        contents: any[];
                    };
                };
                total_delegation_stake: string;
                total_validator_stake: string;
                quorum_stake_threshold?: string | undefined;
            };
        }, {
            type: import("superstruct").Struct<string, null>;
            fields: import("superstruct").Struct<{
                active_validators: {
                    type: string;
                    fields: {
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    };
                }[];
                pending_validators: number[];
                pending_removals: number[];
                next_epoch_validators: {
                    type: string;
                    fields: {
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    };
                }[];
                pending_delegation_switches: {
                    type: string;
                    fields: {
                        contents: any[];
                    };
                };
                total_delegation_stake: string;
                total_validator_stake: string;
                quorum_stake_threshold?: string | undefined;
            }, {
                active_validators: import("superstruct").Struct<{
                    type: string;
                    fields: {
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    };
                }[], import("superstruct").Struct<{
                    type: string;
                    fields: {
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    };
                }, {
                    type: import("superstruct").Struct<string, null>;
                    fields: import("superstruct").Struct<{
                        metadata: {
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        };
                        voting_power: string | null;
                        stake_amount: string;
                        pending_stake: string;
                        pending_withdraw: string;
                        gas_price: string;
                        delegation_staking_pool: {
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        };
                        commission_rate: string;
                    }, {
                        commission_rate: import("superstruct").Struct<string, null>;
                        delegation_staking_pool: import("superstruct").Struct<{
                            type: string;
                            fields: {
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            };
                        }, {
                            type: import("superstruct").Struct<string, null>;
                            fields: import("superstruct").Struct<{
                                validator_address: string;
                                delegation_token_supply: {
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                };
                                pending_delegations: {
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                };
                                pending_withdraws: {
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                };
                                rewards_pool: string;
                                starting_epoch: string;
                                sui_balance: string;
                            }, {
                                delegation_token_supply: import("superstruct").Struct<{
                                    type: string;
                                    fields: {
                                        value: string;
                                    };
                                }, {
                                    type: import("superstruct").Struct<string, null>;
                                    fields: import("superstruct").Struct<{
                                        value: string;
                                    }, {
                                        value: import("superstruct").Struct<string, null>;
                                    }>;
                                }>;
                                pending_delegations: import("superstruct").Struct<{
                                    type: string;
                                    fields: {
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    };
                                }, {
                                    type: import("superstruct").Struct<string, null>;
                                    fields: import("superstruct").Struct<{
                                        id: {
                                            id: string;
                                        };
                                        size: string;
                                        head: string | null;
                                        tail: string | null;
                                    }, {
                                        id: import("superstruct").Struct<{
                                            id: string;
                                        }, {
                                            id: import("superstruct").Struct<string, null>;
                                        }>;
                                        head: import("superstruct").Struct<string | null, null>;
                                        size: import("superstruct").Struct<string, null>;
                                        tail: import("superstruct").Struct<string | null, null>;
                                    }>;
                                }>;
                                pending_withdraws: import("superstruct").Struct<{
                                    type: string;
                                    fields: {
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    };
                                }, {
                                    type: import("superstruct").Struct<string, null>;
                                    fields: import("superstruct").Struct<{
                                        contents: {
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        };
                                    }, {
                                        contents: import("superstruct").Struct<{
                                            type: string;
                                            fields: {
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            };
                                        }, {
                                            type: import("superstruct").Struct<string, null>;
                                            fields: import("superstruct").Struct<{
                                                id: {
                                                    id: string;
                                                };
                                                size: string;
                                            }, {
                                                id: import("superstruct").Struct<{
                                                    id: string;
                                                }, {
                                                    id: import("superstruct").Struct<string, null>;
                                                }>;
                                                size: import("superstruct").Struct<string, null>;
                                            }>;
                                        }>;
                                    }>;
                                }>;
                                rewards_pool: import("superstruct").Struct<string, null>;
                                starting_epoch: import("superstruct").Struct<string, null>;
                                sui_balance: import("superstruct").Struct<string, null>;
                                validator_address: import("superstruct").Struct<string, null>;
                            }>;
                        }>;
                        gas_price: import("superstruct").Struct<string, null>;
                        metadata: import("superstruct").Struct<{
                            type: string;
                            fields: {
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            };
                        }, {
                            type: import("superstruct").Struct<string, null>;
                            fields: import("superstruct").Struct<{
                                name: string | number[];
                                sui_address: string;
                                pubkey_bytes: number[];
                                network_pubkey_bytes: number[];
                                worker_pubkey_bytes: number[];
                                net_address: number[];
                                consensus_address: number[];
                                worker_address: number[];
                                next_epoch_stake: string;
                                next_epoch_delegation: string;
                                next_epoch_gas_price: string;
                                next_epoch_commission_rate: string;
                                proof_of_possession: number[];
                                description?: string | number[] | undefined;
                                image_url?: string | number[] | undefined;
                                project_url?: string | number[] | undefined;
                            }, {
                                consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                                name: import("superstruct").Struct<string | number[], null>;
                                description: import("superstruct").Struct<string | number[] | undefined, null>;
                                image_url: import("superstruct").Struct<string | number[] | undefined, null>;
                                project_url: import("superstruct").Struct<string | number[] | undefined, null>;
                                net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                                network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                                next_epoch_commission_rate: import("superstruct").Struct<string, null>;
                                next_epoch_delegation: import("superstruct").Struct<string, null>;
                                next_epoch_gas_price: import("superstruct").Struct<string, null>;
                                next_epoch_stake: import("superstruct").Struct<string, null>;
                                proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                                pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                                sui_address: import("superstruct").Struct<string, null>;
                                worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                                worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                            }>;
                        }>;
                        pending_stake: import("superstruct").Struct<string, null>;
                        pending_withdraw: import("superstruct").Struct<string, null>;
                        stake_amount: import("superstruct").Struct<string, null>;
                        voting_power: import("superstruct").Struct<string | null, null>;
                    }>;
                }>>;
                next_epoch_validators: import("superstruct").Struct<{
                    type: string;
                    fields: {
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    };
                }[], import("superstruct").Struct<{
                    type: string;
                    fields: {
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    };
                }, {
                    type: import("superstruct").Struct<string, null>;
                    fields: import("superstruct").Struct<{
                        name: string | number[];
                        sui_address: string;
                        pubkey_bytes: number[];
                        network_pubkey_bytes: number[];
                        worker_pubkey_bytes: number[];
                        net_address: number[];
                        consensus_address: number[];
                        worker_address: number[];
                        next_epoch_stake: string;
                        next_epoch_delegation: string;
                        next_epoch_gas_price: string;
                        next_epoch_commission_rate: string;
                        proof_of_possession: number[];
                        description?: string | number[] | undefined;
                        image_url?: string | number[] | undefined;
                        project_url?: string | number[] | undefined;
                    }, {
                        consensus_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        name: import("superstruct").Struct<string | number[], null>;
                        description: import("superstruct").Struct<string | number[] | undefined, null>;
                        image_url: import("superstruct").Struct<string | number[] | undefined, null>;
                        project_url: import("superstruct").Struct<string | number[] | undefined, null>;
                        net_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        network_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        next_epoch_commission_rate: import("superstruct").Struct<string, null>;
                        next_epoch_delegation: import("superstruct").Struct<string, null>;
                        next_epoch_gas_price: import("superstruct").Struct<string, null>;
                        next_epoch_stake: import("superstruct").Struct<string, null>;
                        proof_of_possession: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        sui_address: import("superstruct").Struct<string, null>;
                        worker_address: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                        worker_pubkey_bytes: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                    }>;
                }>>;
                pending_delegation_switches: import("superstruct").Struct<{
                    type: string;
                    fields: {
                        contents: any[];
                    };
                }, {
                    type: import("superstruct").Struct<string, null>;
                    fields: import("superstruct").Struct<{
                        contents: any[];
                    }, {
                        contents: import("superstruct").Struct<any[], import("superstruct").Struct<any, null>>;
                    }>;
                }>;
                pending_removals: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                pending_validators: import("superstruct").Struct<number[], import("superstruct").Struct<number, null>>;
                quorum_stake_threshold: import("superstruct").Struct<string | undefined, null>;
                total_delegation_stake: import("superstruct").Struct<string, null>;
                total_validator_stake: import("superstruct").Struct<string, null>;
            }>;
        }>;
    }>;
}>;
