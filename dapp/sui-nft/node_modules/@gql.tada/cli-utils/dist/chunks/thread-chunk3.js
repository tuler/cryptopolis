var e = require("typescript");

var r = require("node:path");

var a = require("@gql.tada/internal");

var i = require("@0no-co/graphqlsp/api");

var t = require("./index-chunk.js");

function _interopNamespaceDefault(e) {
  var r = Object.create(null);
  if (e) {
    Object.keys(e).forEach((function(a) {
      if ("default" !== a) {
        var i = Object.getOwnPropertyDescriptor(e, a);
        Object.defineProperty(r, a, i.get ? i : {
          enumerable: !0,
          get: function() {
            return e[a];
          }
        });
      }
    }));
  }
  r.default = e;
  return r;
}

var n = _interopNamespaceDefault(r);

var o = t.expose((async function* _runDiagnostics(r) {
  var o = n.dirname(r.configPath);
  var l = t.programFactory(r);
  var s = l.createExternalFiles();
  if (s.length) {
    yield {
      kind: "EXTERNAL_WARNING"
    };
    await l.addVirtualFiles(s);
  }
  var g = await a.loadRef(r.pluginConfig).load({
    rootPath: o
  });
  var f = l.build();
  var u = f.buildPluginInfo(r.pluginConfig);
  var c = f.getSourceFiles();
  yield {
    kind: "FILE_COUNT",
    fileCount: c.length
  };
  for (var v of c) {
    var d = v.fileName;
    var p = i.getGraphQLDiagnostics(d, g, u);
    var m = [];
    if (p && p.length) {
      for (var y of p) {
        if (!("messageText" in y) || "string" != typeof y.messageText || !y.file) {
          continue;
        }
        var h = "info";
        if (y.category === e.DiagnosticCategory.Error) {
          h = "error";
        } else if (y.category === e.DiagnosticCategory.Warning) {
          h = "warn";
        }
        var N = f.getSourcePosition(v, {
          start: y.start || 1,
          length: y.length || 1
        });
        d = N.fileName;
        m.push({
          severity: h,
          message: y.messageText,
          file: N.fileName,
          line: N.line,
          col: N.col,
          endLine: N.endLine,
          endColumn: N.endColumn
        });
      }
    }
    yield {
      kind: "FILE_DIAGNOSTICS",
      filePath: d,
      messages: m
    };
  }
}));

exports.runDiagnostics = o;
//# sourceMappingURL=thread-chunk3.js.map
