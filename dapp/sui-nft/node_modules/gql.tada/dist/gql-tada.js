Object.defineProperty(exports, "__esModule", {
  value: !0
});

var r = require("@0no-co/graphql.web");

function initGraphQLTada() {
  function graphql(e, n) {
    var i = r.parse(e).definitions;
    var a = new Set;
    for (var t of n || []) {
      for (var s of t.definitions) {
        if (s.kind === r.Kind.FRAGMENT_DEFINITION && !a.has(s)) {
          i.push(s);
          a.add(s);
        }
      }
    }
    if (i[0].kind === r.Kind.FRAGMENT_DEFINITION && i[0].directives) {
      i[0].directives = i[0].directives.filter((r => "_unmask" !== r.name.value));
    }
    return {
      kind: r.Kind.DOCUMENT,
      definitions: i
    };
  }
  graphql.scalar = function scalar(r, e) {
    return e;
  };
  graphql.persisted = function persisted(e, n) {
    return {
      kind: r.Kind.DOCUMENT,
      definitions: n ? n.definitions : [],
      documentId: e
    };
  };
  return graphql;
}

var e = initGraphQLTada();

exports.graphql = e;

exports.initGraphQLTada = initGraphQLTada;

exports.maskFragments = function maskFragments(r, e) {
  return e;
};

exports.parse = function parse(e) {
  return r.parse(e);
};

exports.readFragment = function readFragment(...r) {
  return 2 === r.length ? r[1] : r[0];
};

exports.unsafe_readResult = function unsafe_readResult(r, e) {
  return e;
};
//# sourceMappingURL=gql-tada.js.map
